#!/usr/bin/bash
script_dir=$(dirname "$0")
file_dir="$script_dir/../data"

list_databases() {
    cd "$file_dir" 
    counter=1
    declare -a db_array

    echo "Available Databases:"
    for db in */; do
        db_name=$(basename "$db")
        db_array+=("$db_name")
        echo "$counter) $db_name"
        ((counter++))
    done

    printf "%s\n" "${db_array[@]}" > "$script_dir/.db_array"
}

drop_database() {
    read -rp "Enter the number of the database to drop (Enter '00' to delete all databases): " db_number

    mapfile -t db_array < "$script_dir/.db_array"
    db_count=${#db_array[@]}

    if [ "$db_number" == "00" ]; then
        read -rp "Are you sure you want to delete all databases? (y/n): " confirm_all
        if [ "$confirm_all" == "y" ]; then
            echo "Deleting all databases..."
            rm -rf "$file_dir"/*
            echo "All databases have been dropped."
        else
            echo "Operation canceled."
        fi
    elif [[ "$db_number" =~ ^[0-9]+$ ]]; then
        if [ "$db_number" -gt 0 ] && [ "$db_number" -le "$db_count" ]; then
            db_to_drop=${db_array[$db_number - 1]}
            
            if [ -d "$file_dir/$db_to_drop" ]; then
                echo "Dropping Database '$db_to_drop'..."
                rm -rf "$file_dir/$db_to_drop"
                echo "Database '$db_to_drop' has been dropped."
            else
                echo "Database '$db_to_drop' does not exist."
            fi
        else
            echo "Invalid input. Please enter a valid database number (1-$db_count) or '00' to delete all databases."
        fi
    else
        echo "Invalid input. Please enter a valid database number or '00' to delete all databases."
    fi
}

list_databases
drop_database

